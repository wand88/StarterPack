

// Here is all scss code for standalone-state classes

// Small reminder for all features by folders 

// (Variables)
// $tr ...Transitions

// (Mixins)
// @include icon(0,0,24px,24px,100px) ...Sprite icon, with retina fallback 
// @include p-e(after, 15px, 20px) { ... } ...Before or after, pseudo elements 
// @include px-rem(24px) ...Rem with px fallback 
// @include bg-colors($ui-color) ...New classes with, the class as a prefix and UI colors 
// @include min-1024 { ... } ...Media queries
// @include max-480 { ... }
// @include min-768-max-1200 { ... } 

// (Functions)
// em(24px) ...EM to px 
// rem(32px) ...REM to px 
// palette(grey, xx-light) ...Color palettes 

// (Placeholders) 
// @extend %clearfix 
// @extend %pseudos 
// @extend %row 
// @extend %container 

// (Animation) daneden.github.io/animate.css 

// (Layout) 
// .col-(state change)-(columns), .col-4, .col-pull-3, .col-push-5, .col-offset-7 ...Mobile-first from 0 
// .col-(breakpoint)-(state change)-(columns), .col-320-12, .col-1024-pull-5, .col-1100-push-7, .col-768-offset-4 ...Breakpoints columns 

// (Header) .header and .headroom, .headroom--pinned (unpinned) and .header--fixed 

// (Footer) .footer 

// (Module) ... 

// (State and State-alone) 
// .font-family--primary (secondary) ...Font family 
// .font-weight--regular (light, bold) ...Font weight 
// .font-heading (subheading, body, list-title, list-body) ...Font style stacks 
// .left (right, center, justify, nowrap, lowercase, uppercase, capitalize) ...Text classes 
// .relative (fixed, absolute) ...Position 
// .srt, .clearfix 
// .float-left (right) and .block-left (right, center) ...Block, element positioning 
// .image-responsive, .iframe-responsive (and .iframe) ...Media responsive 
// .webkit, .line-clamp-1 (2, 3, 4) ...For "..." instead of hidden overflown text
// .hide-all and .hide-320 (breakpoints)
// .display-inline (inline-block, block) and .display-1200-inline-block ("breakpoint"-"inline"(inline-block, block))

// (Theme) 
// .bg-grey--x-light (base, light, dark, xx-light, xx-dark, etc.) ...Background-color classes 
// .color-primary--base (base, light, dark, xx-light, xx-dark, etc.) ...Color classes 

// That's it!

// Start code here 



// --- Font Classes --- 


.font-heading {
  font-size: 3.157em;
  line-height: 1.1;
  font-weight: $font-weight--regular;
  margin-bottom: 0.5em; }

.font-subheading {
  font-size: 2.369em;
  line-height: 1.2;
  font-weight: $font-weight--regular;
  margin-bottom: 0.5em; }

.font-body {
  font-size: 1em;
  line-height: 1.45;
  font-weight: $font-weight--regular;
  margin-bottom: 1.3em; }

.font-list-title {
  font-size: 1.333em;
  line-height: 1.4;
  font-weight: $font-weight--regular;
  margin-bottom: 0.5em; }

.font-list-body {
  font-size: 1em;
  line-height: 1.4;
  font-weight: $font-weight--regular;
  margin-bottom: 1.4em; }



// --- Text Classes ---


// -- Text Align --


.left {
  text-align: left; }

.right {
  text-align: right; }

.center {
  text-align: center; }

.justify {
  text-align: justify; }

.nowrap {
  white-space: nowrap; }


// -- Text Transform -- 


.lowercase {
  text-transform: lowercase; }

.uppercase {
  text-transform: uppercase; }

.capitalize {
  text-transform: capitalize; }

.underline {
  text-decoration: underline; }

.decoration-none {
  text-decoration: none; }



// --- Positions: relative, absolute and fixed --- 


.relative {
  position: relative; } 

.fixed {
  position: fixed; } 

.absolute {
  position: absolute; }



// --- Elements Align --- 

// Aligning using floats, and for center align, margin-left(and right): auto and display: block 


.float-left {
  float: left; } 

.float-right {
  float: right; }

.float-none {
  float: none; }

.block-left {
  display: block;
  margin-right: auto; }

.block-right {
  display: block;
  margin-left: auto; }

.block-center {
  display: block;
  margin-left: auto;
  margin-right: auto; }



// --- SRT --- 

// Screen reader text class. Hides text, but can still be read by a text reader 
// Hides text for: Form labels, icon span text, etc.


.srt {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  border: 0; }



// --- Clearfix --- 


.clearfix {
  @extend %clearfix; }


// -- Clearfix for Other Classes -- 


.clearfix:before,
.clearfix:after,
.container:before,
.container:after,
.row:before,
.row:after {
  display: table;
  content: " "; }

.clearfix:after,
.container:after,
.row:after {
  clear: both; }



// --- Responsive Image and iframe Embed 

// -- Image -- 


.image-responsive {
  display: block;
  max-width: 100%;
  height: auto; }


// -- iframe Embed -- 

// Responsive youtube, vimeo embed, etc. 
// ie. <div class="iframe-responsive">
// <iframe class="iframe" width="1280" height="720" src="https://www.youtube.com/embed/Cndj8y1kBVY?autoplay=1&amp;rel=0&amp;showinfo=0" frameborder="0" allowfullscreen=""> 
// </iframe> </div>


.iframe-responsive {
  position: relative;
  padding-bottom: 53.26%;
  padding-top: 3%;
  height: 0; }

.iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }



// --- Show "...", Instead of the Hidden Text Overflow --- 

// For text, which overflow in the last line is hidden, to show "..." instead of the hidden text
// Use classes .webkit and .line-clamp-* (depending on how many rows of text are wanted) 


.webkit {
  display: -webkit-box;
  -webkit-box-orient: vertical;
  text-overflow: ellipsis;
  white-space: normal;
  word-wrap: break-word;
  line-height: 1.25em;
  overflow: hidden; }

.line-clamp-1 {
  max-height: 1.7em;
  -webkit-line-clamp: 1; }

.line-clamp-2 {
  max-height: 2.7em;
  -webkit-line-clamp: 2; }

.line-clamp-3 {
  max-height: 3.7em;
  -webkit-line-clamp: 3; }

.line-clamp-4 {
  max-height: 4.7em;
  -webkit-line-clamp: 4; }



// --- Helper Classes / Hide and Display --- 

// It is important, that hide classes go before display classes, for good cascading rules 


// -- Hide -- 

// Hides content hide-* and up, with display: none; 
// ie. hide-768, will hide the element from 768px viewport and up 

// It is important that media query breakpoint units, be in 'em'
// px to em: 320px = 20em; 480px = 30em; 640px = 40em; 768px = 48em; 980px = 61.25em; 1024px = 64em; 
// 1100px = 68.75em; 1200px = 75em; 1440px = 90em; 1650px = 103.125em; 1920px = 120em;


// Hide on all


.hide-all {
  display: none; }


// Hide-* and up


@media only screen and (min-width: 20em) {
  .hide-320 {
    display: none; }
}

@media only screen and (min-width: 30em) {
  .hide-480 {
    display: none; }
}

@media only screen and (min-width: 40em) {
  .hide-640 {
    display: none; }
}

@media only screen and (min-width: 48em) {
  .hide-768 {
    display: none; }
}

@media only screen and (min-width: 61.25em) {
  .hide-980 {
    display: none; }
}

@media only screen and (min-width: 64em) {
  .hide-1024 {
    display: none; }
}

@media only screen and (min-width: 68.75em) {
  .hide-1100 {
    display: none; }
}

@media only screen and (min-width: 75em) {
  .hide-1200 {
    display: none; }
}

@media only screen and (min-width: 90em) {
  .hide-1440 {
    display: none; }
}

@media only screen and (min-width: 103.125em) {
  .hide-1650 {
    display: none; }
}

@media only screen and (min-width: 120em) {
  .hide-1920 {
    display: none; }
}


// -- Display -- 

// Displays the content with inline, inline-block or block value, from a breakpoint and up 
// ie. .display-768-inline-block or .display-1200-block, so .display-*(breakpoint)-*(value)
// Breakpoints: 320, 480, 640, 768, 980, 1024, 1100, 1200, 1440, 1650 and 1920px
// Values: inline, inline-block and block 

// - inline - 


@media only screen and (min-width: 20em) {
  .display-320-inline {
    display: inline; }
}

@media only screen and (min-width: 30em) {
  .display-480-inline {
    display: inline; }
}

@media only screen and (min-width: 40em) {
  .display-640-inline {
    display: inline; }
}

@media only screen and (min-width: 48em) {
  .display-768-inline {
    display: inline; }
}

@media only screen and (min-width: 61.250em) {
  .display-980-inline {
    display: inline; }
}

@media only screen and (min-width: 64em) {
  .display-1024-inline {
    display: inline; }
}

@media only screen and (min-width: 68.75em) {
  .display-1100-inline {
    display: inline; }
}

@media only screen and (min-width: 75em) {
  .display-1200-inline {
    display: inline; }
}

@media only screen and (min-width: 90em) {
  .display-1440-inline {
    display: inline; }
}

@media only screen and (min-width: 103.125em) {
  .display-1650-inline {
    display: inline; }
}

@media only screen and (min-width: 120em) {
  .display-1920-inline {
    display: inline; }
}


// - inline-block - 


@media only screen and (min-width: 20em) {
  .display-320-inline-block {
    display: inline-block; }
}

@media only screen and (min-width: 30em) {
  .display-480-inline-block {
    display: inline-block; }
}

@media only screen and (min-width: 40em) {
  .display-640-inline-block {
    display: inline-block; }
}

@media only screen and (min-width: 48em) {
  .display-768-inline-block {
    display: inline-block; }
}

@media only screen and (min-width: 61.250em) {
  .display-980-inline-block {
    display: inline-block; }
}

@media only screen and (min-width: 64em) {
  .display-1024-inline-block {
    display: inline-block; }
}

@media only screen and (min-width: 68.75em) {
  .display-1100-inline-block {
    display: inline-block; }
}

@media only screen and (min-width: 75em) {
  .display-1200-inline-block {
    display: inline-block; }
}

@media only screen and (min-width: 90em) {
  .display-1440-inline-block {
    display: inline-block; }
}

@media only screen and (min-width: 103.125em) {
  .display-1650-inline-block {
    display: inline-block; }
}

@media only screen and (min-width: 120em) {
  .display-1920-inline-block {
    display: inline-block; }
}


// - block - 


@media only screen and (min-width: 20em) {
  .display-320-block {
    display: block; }
}

@media only screen and (min-width: 30em) {
  .display-480-block {
    display: block; }
}

@media only screen and (min-width: 40em) {
  .display-640-block {
    display: block; }
}

@media only screen and (min-width: 48em) {
  .display-768-block {
    display: block; }
}

@media only screen and (min-width: 61.250em) {
  .display-980-block {
    display: block; }
}

@media only screen and (min-width: 64em) {
  .display-1024-block {
    display: block; }
}

@media only screen and (min-width: 68.75em) {
  .display-1100-block {
    display: block; }
}

@media only screen and (min-width: 75em) {
  .display-1200-block {
    display: block; }
}

@media only screen and (min-width: 90em) {
  .display-1440-block {
    display: block; }
}

@media only screen and (min-width: 103.125em) {
  .display-1650-block {
    display: block; }
}

@media only screen and (min-width: 120em) {
  .display-1920-block {
    display: block; }
} 



// --- Hide and Show in Print View, Helper Classes ---


// -- Hide -- 


@media print {
  .hide-print {
    display: none !important; } 
}


// -- Show: block, inline-block and inline -- 


@media print {
  .display-print-block {
    display: block; }
}

@media print {
  .display-print-inline-block {
    display: inline-block; }
}

@media print {
  .display-print-inline {
    display: inline; }
}


// Start custom Helper Classes, Hide and Display, for custom Breakpoints   



// End custom Helper Classes 


